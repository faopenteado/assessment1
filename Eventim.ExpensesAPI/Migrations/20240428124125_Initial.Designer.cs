// <auto-generated />
using System;
using Eventim.Expenses.Model.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Eventim.ExpensesAPI.Migrations
{
    [DbContext(typeof(SqlContext))]
    [Migration("20240428124125_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.18")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Eventim.Expenses.Model.Expenses", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("Amount");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("Date");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("Description");

                    b.Property<long>("ExpensesGroupsId")
                        .HasColumnType("bigint");

                    b.Property<long>("ExpensesGroupsPeopleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesGroupsId");

                    b.HasIndex("ExpensesGroupsPeopleId");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Eventim.Expenses.Model.ExpensesGroups", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.ToTable("ExpensesGroups");
                });

            modelBuilder.Entity("Eventim.Expenses.Model.Payments", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<long>("ExpensesGroupsId")
                        .HasColumnType("bigint");

                    b.Property<int>("Id_ExpenseGroup")
                        .HasColumnType("int");

                    b.Property<int>("Id_People")
                        .HasColumnType("int");

                    b.Property<long>("expensesGroupsPeopleId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesGroupsId");

                    b.HasIndex("expensesGroupsPeopleId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("Eventim.ExpensesAPI.Model.ExpensesGroupsPeople", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("Id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<long>("Id"));

                    b.Property<long>("ExpensesGroupsId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)")
                        .HasColumnName("Name");

                    b.HasKey("Id");

                    b.HasIndex("ExpensesGroupsId");

                    b.ToTable("_ExpensesGroupsPeople");
                });

            modelBuilder.Entity("Eventim.Expenses.Model.Expenses", b =>
                {
                    b.HasOne("Eventim.Expenses.Model.ExpensesGroups", "ExpensesGroups")
                        .WithMany("expenses")
                        .HasForeignKey("ExpensesGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eventim.ExpensesAPI.Model.ExpensesGroupsPeople", "ExpensesGroupsPeople")
                        .WithMany()
                        .HasForeignKey("ExpensesGroupsPeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpensesGroups");

                    b.Navigation("ExpensesGroupsPeople");
                });

            modelBuilder.Entity("Eventim.Expenses.Model.Payments", b =>
                {
                    b.HasOne("Eventim.Expenses.Model.ExpensesGroups", "ExpensesGroups")
                        .WithMany()
                        .HasForeignKey("ExpensesGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Eventim.ExpensesAPI.Model.ExpensesGroupsPeople", "expensesGroupsPeople")
                        .WithMany()
                        .HasForeignKey("expensesGroupsPeopleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpensesGroups");

                    b.Navigation("expensesGroupsPeople");
                });

            modelBuilder.Entity("Eventim.ExpensesAPI.Model.ExpensesGroupsPeople", b =>
                {
                    b.HasOne("Eventim.Expenses.Model.ExpensesGroups", "ExpensesGroups")
                        .WithMany("expensesGroupsPeople")
                        .HasForeignKey("ExpensesGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ExpensesGroups");
                });

            modelBuilder.Entity("Eventim.Expenses.Model.ExpensesGroups", b =>
                {
                    b.Navigation("expenses");

                    b.Navigation("expensesGroupsPeople");
                });
#pragma warning restore 612, 618
        }
    }
}
